객체 - 속성과 동작으로 구성 
속성 = 필드
동작 = 메소드 
⸻->> 사람이라는 객체의 속성인 이름 와 동작인 웃다
          자동차라는 객체의 속성인 색깔 와 동작인 달린다
==>  자바에서 사람, 자동차라는 객체가 있고 이름, 색깔이라는 필드 , 웃다,달린다라는 메소드 

메소드 호출 : 객체들 사이의 상호작용 수단으로 한 객체가 다른 객체의 기능을 이용하는 것 
=> 객체의 상호작용은 객체간의 메소드 호출을 의미하며 매개값과 리턴값을 통해 서로 데이터를 주고받음 

자동차 객체 — (상속관계) — 기계 객체
사람 객체 — (사용 관계) — 자동차 객체
자동차 객체 — (집합 관계) — 엔진 객체 , 타이어 객체, ,,, 

클래스 : 메모리에서 사용하고 싶은 객체를 설계도 하는 작업이 필요한데 여기서 설계도에 해당 
인스턴스 : 클래스로부터 만들어진 객체 

new : 클래스로부터 객체 생성하는 연산자 
new연산자로 생성된 객체는 메모리 힙 영역에 생성됨 
new연산자는 힙 영역에 객체를 생성시킨 후 객체의 번지를 리턴하도록 되어 있음 이 주소를 참조 타입인 클래스 
변수에 저장해두면 변수를 통해 객체 사용할 수 있음 

클래스의 용도 - 라이브러리용 - 실행용 
프로그램 전체에서 사용되는 클래스가 100개라면 99개는 라이브러리용, 1개는 실행용 
실행 클래스는 프로그램 실행 진입점인 main() 메소드를 제공하는 역할 

클래스 구성 멤버 
- 필드 : 객체의 데이터가 저장되는 곳 
    필드는 생성자와 메소드 전체에서 사용되며 개체가 소멸되지 않는 한 객체와 함께 존재 
- 생성자 : 객체 생성 시 초기화 역할 담당
    new연산자로 호출되는 특별한 중괄호 블록 
    클래스 이름으로 되어있고 리턴 타입이 없음 
- 메소드 : 객체의 동작에 해당하는 실행 블록 
    필드를 읽고 수정하는 역할 및 다른 객체를 생성해서 다양한 기능 수행
    객체간 데이터 전달하는 수단, 호출한곳으로부터 매개값을 받아 실행에 이용하고 실행 후 결과값을 
    호출한 곳으로 리턴할 수도 있음 
    
public class ClassName {
 // 필드
int fieldnme;
 //생성자
ClassName() { } 
//메소드
void methoName() { } 
}