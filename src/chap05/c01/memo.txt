데이터 타입 
⸺ : 참조타입 - 배열타입 / 열거타입 / 클래스 / 인터페이스
ㅣ— : 기본타입 - 정수타입(int long char byte short) / 실수타입(float double) / 논리타입(boolean)

기본타입 변수들 -> 실제 값을 변수 안에 저장
참조타입 변수들 -> 메모리의 번지를 변수 안에 저장 
번지를 통해 객체를 참조한다는 뜻에서 참조타입이라고 부름 


메모리 영역
  — 메소드 영역 : 모든 스레드가 공유하는 영역 
코드에서 사용되는 클래스들을 클래스 로더로 읽어 클래스별로 정적필드와 상수, 메소드코드, 생성자코드 등을 분류해서 저장

  — 힙영역 : 객체와 배열이 생성/존재하는 영역
여기에 생성된 객체와 배열은 jvm스택 영역의 변수나 다른 객체의 필드에서 참조
만일 참조하는 변수나 필드가 없다면 의미없는 객체가 되어 자종으로 제거 

  — jvm스택 영역 : jvm스택은 메소드를 호출할 때마다 프레임을 추가하고 메소드가 종료되면 해당프래임 제거하는 동작 수행
스택영역에 변수가 생성되는 시점은 최초로 변수에 값이 저장될 때 
변수는 선언된 블록 안에서만 스택에 존재하고 블록을 벗어나면 스택에서 제거됨 

기본타입 변수들 -> 스택 영역에 직접 값을 가지고 있음
참초타입 변수들 -> 스택 영역에 힙 영역의 객체 주소를 가짐


== , !==
기본타입 변수들 -> 변수의 값이 같은지, 아닌지 판단
참조타입 변수들 -> 동일한 객체를 참조하는지, 다른 객체를 참조하는지 판단 즉 번지 값을 비교하는 것 

참조타입 변수는 힙 영역의 객체를 참조하지 않는 다는 뜻으로 null값을 가질 수 있음 
null로 초기화된 참조변수는 스택 영역에 생성됨 ->> null : 참조객체x

예외 : 프로그램 실행 중 발생하는 오류 
참조변수가 null을 가지고 있을 경우 참조객체가 없으므로 변수를 통해 객체를 사용 할 수 없음
이때 실행하면 nullpionterexception 발생 


String
문자열은 string객체로 생성되고 변수는 string객체를 참조 
—> 스택영역에 ‘name’이라는 변수가 있고 그 변수는 힙 영역에 ‘홍길동’ 이라는 string객체를 참조 

문자열 리터럴이 동일하다면 string객체 공유 가능 
—> 스택영역에 ’name1’, ‘name2’라는 변수가 모두 힙 영역에 ‘홍길동’이라는 string객체 참조 가능 

new연산자를 통해 새로운 객체를 생성할 수 있음 
즉 문자열 리터럴이 동일해도 서로 다른 객체를 참조하는 변수 생성 

equals() 메소드 : 객체는 신경쓰지 않고 내부 문자열만 비교 

null을 대입하여 더이상 string객체를 참조하지 않게 할 수 있는데 이럴경우 쓰레기 객체로 취급되어 메모리에서 자동 제거 됨 